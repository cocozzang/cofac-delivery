// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.7
//   protoc               v5.29.3
// source: proto/product.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "product";

export interface CreateSamplesRequest {
}

export interface CreateSamplesResponse {
  success: boolean;
}

export interface GetProductsInfoRequest {
  productIds: string[];
}

export interface GetProductsInfoResponse {
  products: GetProductsInfoResponse_ProductInfo[];
}

export interface GetProductsInfoResponse_ProductInfo {
  id: string;
  name: string;
  description: string;
  price: number;
  stock: number;
}

export const PRODUCT_PACKAGE_NAME = "product";

export interface ProductServiceClient {
  createSamples(request: CreateSamplesRequest): Observable<CreateSamplesResponse>;

  getProductsInfo(request: GetProductsInfoRequest): Observable<GetProductsInfoResponse>;
}

export interface ProductServiceController {
  createSamples(
    request: CreateSamplesRequest,
  ): Promise<CreateSamplesResponse> | Observable<CreateSamplesResponse> | CreateSamplesResponse;

  getProductsInfo(
    request: GetProductsInfoRequest,
  ): Promise<GetProductsInfoResponse> | Observable<GetProductsInfoResponse> | GetProductsInfoResponse;
}

export function ProductServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["createSamples", "getProductsInfo"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("ProductService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("ProductService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const PRODUCT_SERVICE_NAME = "ProductService";
